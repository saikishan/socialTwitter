angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(o,t){o.$on("login",function(t,n){alert("got the user data"+n),o.currentUser=n}),o.logout=function(){o.currentUser=null,t.logout()}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(o,t,n){o.login=function(n,e){console.log("its loginfunction"),t.login(n,e).then(function(t){o.$emit("login",t.data)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.addPost=function(){console.log("entered on to addpost()"),o.postBody&&t.create({username:"kishan",body:o.postBody}).success(function(t){o.postBody=null})},o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})}),t.fetch().success(function(t){o.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return console.log("thepost is about to0 crate at  fe"),o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,t){o.register=function(o,n){t.register(o,n)}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(o,t){t.html5Mode({enabled:!0,requireBase:!1}),o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}),o.when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}),o.when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this,n=o.defaults.headers.common["X-Auth"];t.getUser=function(){return o.get("/api/users")},t.login=function(n,e){return o.post("/api/sessions",{username:n,password:e}).then(function(n){return t.token=n.data,o.defaults.headers.common["X-Auth"]=n.data,t.getUser()})},t.register=function(t,n){return o.post("/api/users",{username:t,password:n})},t.logout=function(){t.token=null,o.defaults.headers.common["X-Auth"]=n}}]),angular.module("app").run(["$rootScope","$timeout",function(o,t){!function n(){var e=new WebSocket("ws://localhost:3000");e.onopen=function(){console.log("websocket connected")},e.onclose=function(){console.log("connection drop trying to reconnect"),t(n,1e4)},e.onmessage=function(t){var n=JSON.parse(t.data);console.log("e data is"),console.log(t.data),o.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
